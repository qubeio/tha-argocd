apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd-install
  namespace: argocd
  # Prevent deletion of ArgoCD itself
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: fleet-manager
  source:
    repoURL: https://argoproj.github.io/argo-helm
    targetRevision: 7.7.8
    chart: argo-cd
    helm:
      skipCrds: false
      valuesObject:
        # Disable redis secret init since it was created by initial Helm install
        redisSecretInit:
          enabled: false
        server:
          service:
            type: ClusterIP
            port: 80
          insecure: true
          ingress:
            enabled: true
            ingressClassName: traefik
            hostname: argocd.test
            path: /
            pathType: Prefix
            tls: true
            extraTls:
              - hosts:
                  - argocd.test
                secretName: test-wildcard-mkcert
        configs:
          cm:
            url: https://argocd.test
            application.instanceLabelKey: argocd.argoproj.io/instance
            # Custom health checks for Ingress resources
            resource.customizations: |
              networking.k8s.io/Ingress:
                health.lua: |
                  hs = {}
                  hs.status = "Healthy"
                  return hs
          secret:
            # Admin password: admin123 (bcrypt hashed)
            argocdServerAdminPassword: $2a$10$dgzMusvV67nY0NU3A/eQvOG2Pw6WplJ6p/h1hrR8E.fAGv8cA7Axy
            argocdServerAdminPasswordMtime: "2025-10-05T00:00:00Z"
            # Server secret key for encrypting session information
            serverSecretKey: dlZ5UE1qdlZZdHhXYlVyLy9GVkkzT0RNRktBWWxLM2xyOUpXcDdoWVRSdz0K
          params:
            server.insecure: true
          rbac:
            policy.default: role:readonly
            policy.csv: |
              p, role:admin, applications, *, */*, allow
              p, role:admin, clusters, *, *, allow
              p, role:admin, repositories, *, *, allow
              p, role:admin, certificates, *, *, allow
              p, role:admin, projects, *, *, allow
              p, role:admin, accounts, *, *, allow
              p, role:admin, gpgkeys, *, *, allow
              p, role:admin, logs, *, *, allow
              p, role:admin, exec, *, *, allow
              g, argocd-admins, role:admin
  destination:
    server: https://kubernetes.default.svc
    namespace: argocd
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
      - Replace=true
      # Skip Helm hooks to prevent re-running init jobs when taking over existing install
      - SkipHooks=true
    # Add retry logic for reliability
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  # Ignore differences in secrets that ArgoCD manages itself
  ignoreDifferences:
    - group: ""
      kind: Secret
      name: argocd-secret
      jsonPointers:
        - /data
